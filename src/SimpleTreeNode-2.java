//9. Чётные деревья и леса
// 2.* Добавьте метод, который сбалансирует чётное двоичное дерево.
//Код:https://github.com/Pseudo-math/DSA2/blob/master/src/SimpleTreeNode.java#L166
//Сложность алгоритма балансировки по времени O(N), так как необходимо обойти все N узлов для сбора значений
// и затем построить новое дерево. Сложность по памяти также O(N) из-за хранения списка значений и создания новой структуры узлов.
//3.* Добавьте метод, который для любого заданного подузла текущего дерева определит общее количество чётных поддеревьев.
//Код:https://github.com/Pseudo-math/DSA2/blob/master/src/SimpleTreeNode.java#L213
//Сложность алгоритма подсчёта чётных поддеревьев по времени O(M), где M - число узлов в заданном поддереве,
// поскольку каждый узел этого поддерева посещается один раз. Сложность по памяти O(H), где H - высота поддерева,
// из-за использования стека рекурсивных вызовов.